
Index

  1. What is this?
  1.1. Why did you write it?
  1.2. Why is it special?

  2. How do I install it?

  3. How do I use it?
  3.1. Basic usage
  3.2. Trim/Ignore features
  3.3. Style configuration
  3.4. Config file
  3.5. Planned features
  
  
  4. I found a bug/I have a request/...


== 1. What is this? ==

DePlo is a program that convert the dependency information in a set of
Ada packages (i.e., who "with"s whom) and produce a graph in DOT
format (see http://www.graphviz.org/).  Package hierarchy is showed by
drawing child packages inside their parents.

Currently it works only in a GNAT environment since it get the
dependency graph by reading the ALI files generated by GNAT.  I guess
that it would be possible to make it portable by using ASIS... maybe
in a future release.

=== 1.1. Why did you write it? ===

Very short answer: why not? :-)

Short answer: an itch of mine

Long and more meaningfull answer: 

    I had the need of visualizing the mutual dependencies among the
packages in a large piece of software that I am developing (currently
185 packages, for almost 1 Mbyte of source code).  With such a large
number of files, the dependency tool provided by GPS produced just a
mess.  Moreover, I wanted to print it, in order to attach it to the
wall. Therefore, I wrote this program.

=== 1.2. Why is it special? ===

  * Converting the structure in DOT format allow you (if necessary) to
    adjust the graph with graph-editing software

  * Package hierarchy is showed by drawing child packages inside their
    parents.  I found this very convenient.

  * Moreover, since 185 packages is still quite a lot of packages, I
    added two nice features: trim lists and ignore lists.

   [Trim]  If a package belongs to the trim list, all its descendants
           are "collapsed" in a single and the arch graphs adjusted
           accordingly.  For example, if A.B belongs to the trim list
           and A.B.C "with"s D.E, then the final graph will have the
           arch A.B -> D.E instead of A.B.C -> D.E.

  [Ignore] If a package belongs to the ignore list, it is removed from
           the graph together with (of cours) all its arches.  The
           ignore list is useful to remove those "basic" packages that
           are used in many places (like, for example, stdio.h in C)
           and that cause the creation of lots of arches that
           complicate needlessy the graph.

== 2. How do I install it? ==

You will need bazaar and gnat

 1) Get the sources from https://launchpad.net/deplo  
    The following command should work 

               bzr branch lp:deplo

 2) Go into the directory with the source code and use
      
               gnatmake -Pdeplo

 3) If everything is OK, you should find in the directory bin an
    executable named "deplo" (deplo.exe, I guess, if you are on
    Windows.  I use Linux, so I cannot check)

 4) Move the executable where your system will find it

== 3. How do I use it? ==

Here I give just a brief overview of how to use the software.  For
more information go to the project site

          https://sites.google.com/site/depplot/

=== 3.1. Very basic usage ===

As said before, this program reads the ALI files generated by GNAT.
The simplest way to use it is to call it as

     deplo  "directory-with-ALI-files" 

by giving on the command line the directory that has the ALI files to
be read.  It will print on the standard output the DOT file, so maybe
you could want to do 

     deplo  "directory-with-ALI-files"  > result.dot

if you want to save the resulting graph somewhere.

=== 3.2 Ignore/Trim feature === 

If you want to use the ignore and/or trim feature, you must use a more
complex syntax with "nominal" parameters.  For example, if you want to
ignore the packages foo.bar and foo.moo you can use

     deplo input=dir-with-ALI ignore=foo.bar,foo.moo > result.dot

If the number of packages to be ignored is too large, you can write
the package names in a file (say, ignore.txt) and ask deplo to read
that file by using the following syntax

     deplo input=dir-with-ALI ignore=@ignore.txt > result.dot

If you want to use the trim feature, the syntax is similar, but the
parameter name is "trim", that is 

     deplo input=dir-with-ALI trim=foo.bar,foo.moo > result.dot

or

     deplo input=dir-with-ALI trim=@trim.txt > result.dot

Of course, you can use both feature together

     deplo input=dir-with-ALI trim=@trim.txt ignore=@ignore.txt > result.dot

=== 3.3. Style configuration ===

It is possible to change the style used to plot the different nodes.  
Check the web site   https://sites.google.com/site/depplot/  for more
info. 

=== 3.4. Config file ===

Starting from 1.2.0 it is possible to write the trim list, the ignore
list and the style configuration inside a single file.  Again, check
the web site   https://sites.google.com/site/depplot/   for more info.

=== 3.5. Planned features ===

The code is planned to be extended with different ways of acquiring
the dependency graph and/or printing in different formats.  The
program already recognizes the corresponding paramters (in-fmt and
out-fmt), but since only one format is possible, they are currently
useless. 

== 4. I found a bug/I have a question/a request/... ==

I guess that the easiest way is to contact me via the launchpad
interface 

          https://bugs.launchpad.net/deplo

and that a good place for feature requests is the launchpad
blueprint page 

          https://blueprints.launchpad.net/deplo

